/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

// #include <dt-bindings/zmk/ext_power.h>
/*
 * To practice explicit layer - &none between layers instead of &transfer
 * Except modifier keys like alt, ctrl, shift for app hotkeys
 * 
 * Future would be cool to have following
 * 1. Automatic plover activation based on grouping
 * 2. Automatic plover disable (maybe manual exit/pause would be better)
 */

&sk {
    release-after-ms = <100>;
    quick-release;
    ignore-modifiers;
};

/ {
    behaviors {
        qlt: quick-layer-tap {
            compatible = "zmk,behavior-hold-tap";
            label = "QUICK_LAYER_TAP";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <100>;
            quick-tap-ms = <0>;
            bindings = <&mo>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        Win_Combo_Left {
            bindings = <&kp LEFT_GUI>;
            key-positions = <28 27>;
            layers = <0>;
        };

        Win_Combo_Left {
            bindings = <&kp LEFT_GUI>;
            key-positions = <32 31>;
            layers = <0>;
        };

        Alt_Combo_Left {
            bindings = <&kp LEFT_ALT>;
            key-positions = <28 27 26>;
            layers = <0>;
        };

        Alt_Combo_Right {
            bindings = <&kp LEFT_ALT>;
            key-positions = <31 32 33>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&trans      &trans  &trans  &trans  &trans         &trans                                       &trans  &trans      &trans     &trans   &trans         &trans
&kp ESCAPE  &kp Q   &kp W   &kp E   &kp R          &kp T                                        &kp Y   &kp U       &kp I      &kp O    &kp P          &kp BACKSLASH
&kp LCTRL   &kp A   &kp S   &kp D   &kp F          &kp G                                        &kp H   &kp J       &kp K      &kp L    &kp SEMICOLON  &kp SQT
&sk LSHFT   &kp Z   &kp X   &kp C   &kp V          &kp B   &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp N   &kp M       &kp COMMA  &kp DOT  &kp FSLH       &sk RSHFT
                            &trans  &kp BACKSPACE  &mo 2   &kp SPACE         &kp ENTER          &mo 1   &kp DELETE  &trans
            >;
        };

        lower_layer {
            bindings = <
&kp F1    &kp F2      &kp F3             &kp F4      &kp F5  &kp F6                  &kp F7    &kp F8         &kp F9       &kp F10    &kp F11  &kp F12
&kp TAB   &none       &kp C_VOL_UP       &none       &none   &none                   &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP  &kp END    &none    &tog 3
&kp CAPS  &kp C_PREV  &kp C_VOLUME_DOWN  &kp C_NEXT  &trans  &trans                  &kp LEFT  &kp DOWN       &kp UP       &kp RIGHT  &trans   &trans
&trans    &none       &kp C_MUTE         &trans      &trans  &trans  &trans  &trans  &trans    &trans         &trans       &trans     &trans   &tog 4
                                         &trans      &trans  &trans  &trans  &trans  &trans    &trans         &trans
            >;
        };

        layer_2 {
            bindings = <
&trans        &trans        &trans        &trans        &trans        &trans                            &trans             &trans    &trans     &trans  &trans     &trans
&kp TAB       &trans        &trans        &trans        &trans        &kp KP_EQUAL                      &trans             &trans    &trans     &trans  &trans     &trans
&kp CAPSLOCK  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5                            &kp NUMBER_6       &kp N7    &kp N8     &kp N9  &kp N0     &trans
&trans        &trans        &trans        &kp ENTER     &kp MINUS     &kp LEFT_BRACKET  &trans  &trans  &kp RIGHT_BRACKET  &kp PLUS  &kp TILDE  &trans  &kp GRAVE  &trans
                                          &trans        &trans        &trans            &trans  &trans  &trans             &trans    &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &tog 3
                        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_3 {
            bindings = <
&trans            &trans  &trans  &trans  &trans    &trans                     &trans  &trans  &trans  &trans  &trans  &trans
&trans            &kp Q   &kp W   &kp E   &kp R     &kp T                      &trans  &trans  &trans  &trans  &trans  &tog 3
&kp LEFT_CONTROL  &kp A   &kp S   &kp D   &kp F     &kp G                      &trans  &trans  &trans  &trans  &trans  &trans
&trans            &kp Z   &kp X   &kp C   &kp V     &kp B   &trans     &trans  &trans  &trans  &trans  &trans  &trans  &tog 4
                                  &trans  &kp LGUI  &mo 5   &kp SPACE  &trans  &trans  &trans  &trans
            >;
        };

        layer_5 {
            bindings = <
&trans      &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&kp ESCAPE  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&kp CAPS    &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
