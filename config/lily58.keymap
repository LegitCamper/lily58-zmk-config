/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/bt.h>

// #include <dt-bindings/zmk/ext_power.h>
/*
 * To practice explicit layer - &none between layers instead of &transfer
 * Except modifier keys like alt, ctrl, shift for app hotkeys
 * 
 * Future would be cool to have following
 * 1. Automatic plover activation based on grouping
 * 2. Automatic plover disable (maybe manual exit/pause would be better)
 */

&sk {
    release-after-ms = <100>;
    quick-release;
    ignore-modifiers;
};

/ {
    behaviors {
        qlt: quick-layer-tap {
            compatible = "zmk,behavior-hold-tap";
            label = "QUICK_LAYER_TAP";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <100>;
            quick-tap-ms = <0>;
            bindings =
                <&mo>,
                <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
  &kp ESC  &kp N1  &kp N2    &kp N3    &kp N4         &kp N5                                       &kp N6       &kp N7         &kp N8   &kp N9         &kp N0      &kp GRAVE
  &kp TAB   &kp Q   &kp W     &kp E     &kp R          &kp T                                        &kp Y        &kp U          &kp I    &kp O          &kp P  &kp BACKSLASH
&kp LCTRL   &kp A   &kp R     &kp S     &kp D          &kp G                                        &kp H        &kp J          &kp K    &kp L  &kp SEMICOLON        &kp SQT
&sk LSHFT   &kp Z   &kp X     &kp C     &kp V          &kp B  &kp LEFT_BRACKET  &kp RIGHT_BRACKET   &kp N        &kp M      &kp COMMA  &kp DOT       &kp FSLH      &sk RSHFT
                           &kp LGUI  &kp LALT  &kp BACKSPACE         &kp SPACE          &kp ENTER   &to 1  &kp K_CMENU  &kp RIGHT_GUI
            >;

            sensor-bindings = <&inc_dec_kp undefined>;
        };

        lower_layer {
            bindings = <
  &kp F1      &kp F2             &kp F3        &kp F4        &kp F5        &kp F6                    &kp F7         &kp F8       &kp F9    &kp F10  &kp F11  &kp F12
  &trans       &none       &kp C_VOL_UP  &out OUT_BLE         &none         &none                  &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP    &kp END    &none   &trans
&kp CAPS  &kp C_PREV  &kp C_VOLUME_DOWN    &kp C_NEXT         &none    &bt BT_CLR                  &kp LEFT       &kp DOWN       &kp UP  &kp RIGHT   &trans   &trans
  &trans       &none         &kp C_MUTE  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &trans  &trans    &trans      &kp TILDE    &kp MINUS  &kp EQUAL   &trans   &trans
                                               &trans        &trans        &trans  &trans  &trans    &trans          &none       &trans
            >;

            sensor-bindings = <&inc_dec_kp A A>;
        };
    };
};
